{"version":3,"sources":["components/Navigation/Navigation.js","components/AuthNav/AuthNav.js","components/UserMenu/UserMenu.js","components/AppBar/AppBar.js","components/Container/Container.js","components/PrivatRoute/PrivatRoute.js","components/PublicRoute/PublicRoute.js","components/App/App.js","redux/contacts/reducers.js","redux/auth/auth-slice.js","redux/store.js","index.js","redux/auth/auth-selectors.js","redux/auth/auth-actions.js","redux/auth/auth-operations.js","components/AuthNav/AuthNav.module.css","components/Navigation/Navigation.module.css","redux/contacts/operations.js","components/UserMenu/UserMenu.module.css","redux/contacts/actions.js","components/AppBar/AppBar.module.css"],"names":["Navigation","isLoggedIn","useSelector","getIsLoggedIn","exact","to","className","s","navLink","activeClassName","activeLink","AuthNav","nav__container","UserMenu","dispatch","useDispatch","name","getUserName","user__container","greeting__title","type","logout__btn","onClick","logOut","AppBar","header__style","Container","children","PrivateRoute","restricted","redirectTo","routeProps","PublicRoute","shouldRedirect","HomeView","lazy","SignUpView","LoginView","PhoneView","App","isFetchCurrentUser","getIsFetchCurrentUser","useEffect","fetchCurrentUser","fallback","path","contactList","createReducer","fetchContacts","fulfilled","_","payload","addContact","state","removeContact","filter","id","contactFilter","filterContacts","authSlice","createSlice","initialState","user","email","token","error","extraReducers","register","logIn","pending","rejected","loginSuccess","loginError","message","registerSuccess","registerError","persistConfig","key","storage","whitelist","contactReducer","combineReducers","store","configureStore","reducer","auth","persistReducer","contacts","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById","loginRequest","createAction","registerRequest","BASE_URL","axios","defaults","headers","common","Authorization","userData","post","then","response","data","catch","toast","info","createAsyncThunk","a","rejectWithValue","thunkAPI","getState","persistedToken","console","log","get","module","exports","baseURL","contact","contactId","delete","status","Error"],"mappings":"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","file":"static/js/main.e995989c.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport s from './Navigation.module.css';\nimport { getIsLoggedIn } from '../../redux/auth/auth-selectors';\n\nconst Navigation = () => {\n  const isLoggedIn = useSelector(getIsLoggedIn);\n  return (\n    <nav>\n      <NavLink\n        exact\n        to=\"/\"\n        className={s.navLink}\n        activeClassName={s.activeLink}\n      >\n        Home\n      </NavLink>\n      {isLoggedIn && (\n        <NavLink\n          exact\n          to=\"/contacts\"\n          className={s.navLink}\n          activeClassName={s.activeLink}\n        >\n          Phonebook\n        </NavLink>\n      )}\n\n      <hr />\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import { NavLink } from 'react-router-dom';\nimport s from './AuthNav.module.css';\n\nexport default function AuthNav() {\n  return (\n    <div className={s.nav__container}>\n      <NavLink\n        to=\"/signup\"\n        className={s.navLink}\n        activeClassName={s.activeLink}\n      >\n        SignUp\n      </NavLink>\n      <NavLink to=\"/login\" className={s.navLink} activeClassName={s.activeLink}>\n        LogIn\n      </NavLink>\n    </div>\n  );\n}\n","import s from './UserMenu.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUserName } from '../../redux/auth/auth-selectors';\nimport { logOut } from '../../redux/auth/auth-operations';\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const name = useSelector(getUserName);\n\n  return (\n    <div className={s.user__container}>\n      <span className={s.greeting__title}>Welcome, {name}!</span>\n      <button\n        type=\"button\"\n        className={s.logout__btn}\n        onClick={() => dispatch(logOut())}\n      >\n        LogOut\n      </button>\n    </div>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport Navigation from '../Navigation/Navigation';\nimport AuthNav from '../AuthNav/AuthNav';\nimport UserMenu from '../UserMenu/UserMenu';\nimport { getIsLoggedIn } from '../../redux/auth/auth-selectors';\nimport s from './AppBar.module.css';\n\nexport default function AppBar() {\n  const isLoggedIn = useSelector(getIsLoggedIn);\n\n  return (\n    <header className={s.header__style}>\n      <Navigation />\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\n    </header>\n  );\n}\n","import PropTypes from 'prop-types';\n\nconst Container = ({ children }) => {\n  return <div>{children}</div>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\nexport default Container;\n","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { getIsLoggedIn } from '../../redux/auth/auth-selectors';\n\nexport default function PrivateRoute({\n  children,\n  restricted,\n  redirectTo = '/',\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(getIsLoggedIn);\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\n    </Route>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { getIsLoggedIn } from '../../redux/auth/auth-selectors';\n\nexport default function PublicRoute({\n  children,\n  restricted = false,\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(getIsLoggedIn);\n  const shouldRedirect = isLoggedIn && restricted;\n  //   console.log(shouldRedirect);\n  return (\n    <Route {...routeProps}>\n      {shouldRedirect ? <Redirect to=\"/\" /> : children}\n    </Route>\n  );\n}\n","import { Switch } from 'react-router-dom';\r\nimport { lazy, Suspense } from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport AppBar from '../AppBar/AppBar';\r\nimport Container from '../Container/Container';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchCurrentUser } from '../../redux/auth/auth-operations';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { getIsFetchCurrentUser } from '../../redux/auth/auth-selectors';\r\n\r\nimport './App.css';\r\nimport PrivateRoute from '../PrivatRoute/PrivatRoute';\r\nimport PublicRoute from '../PublicRoute/PublicRoute';\r\n\r\nconst HomeView = lazy(() =>\r\n  import('../../views/HomeView/HomeView' /* webpackChunkName: \"home-view\" */),\r\n);\r\nconst SignUpView = lazy(() =>\r\n  import(\r\n    '../../views/SignUpView/SignUpView' /* webpackChunkName: \"sign-up-view\" */\r\n  ),\r\n);\r\n\r\nconst LoginView = lazy(() =>\r\n  import(\r\n    '../../views/LoginView/LoginView' /* webpackChunkName: \"login-view\" */\r\n  ),\r\n);\r\n\r\nconst PhoneView = lazy(() =>\r\n  import(\r\n    '../../views/PhoneView/PhoneView' /* webpackChunkName: \"phone-view\" */\r\n  ),\r\n);\r\n\r\nexport default function App() {\r\n  const dispatch = useDispatch();\r\n  const isFetchCurrentUser = useSelector(getIsFetchCurrentUser);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCurrentUser());\r\n  }, [dispatch]);\r\n\r\n  return !isFetchCurrentUser ? (\r\n    <Loader />\r\n  ) : (\r\n    <div className=\"Container\">\r\n      <AppBar />\r\n      <Container>\r\n        <Suspense fallback={<Loader />}>\r\n          <Switch>\r\n            <PublicRoute exact path=\"/\">\r\n              <HomeView />\r\n            </PublicRoute>\r\n            <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\r\n              <PhoneView />\r\n            </PrivateRoute>\r\n            <PublicRoute exact path=\"/signup\" restricted>\r\n              <SignUpView />\r\n            </PublicRoute>\r\n            <PublicRoute exact path=\"/login\" restricted>\r\n              <LoginView />\r\n            </PublicRoute>\r\n          </Switch>\r\n        </Suspense>\r\n      </Container>\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n}\r\n","import { createReducer } from '@reduxjs/toolkit';\nimport { addContact, fetchContacts, removeContact } from './operations';\nimport { filterContacts } from './actions';\n\nexport const contactList = createReducer([], {\n  [fetchContacts.fulfilled]: (_, { payload }) => payload,\n  [addContact.fulfilled]: (state, { payload }) => [...state, payload],\n  [removeContact.fulfilled]: (state, { payload }) => {\n    return state.filter(({ id }) => id !== payload);\n  },\n});\n\nexport const contactFilter = createReducer('', {\n  [filterContacts]: (_, { payload }) => payload,\n});\n","import { createSlice } from '@reduxjs/toolkit';\nimport { register, logIn, logOut, fetchCurrentUser } from './auth-operations';\nimport {\n  loginSuccess,\n  loginError,\n  registerSuccess,\n  registerError,\n} from './auth-actions';\n\nconst initialState = {\n  user: { name: '', email: '' },\n  token: '',\n  isLoggedIn: false,\n  isFetchCurrentUser: false,\n  error: null,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  extraReducers: {\n    [register.fulfilled](state, { payload }) {\n      state.user = payload.user;\n      state.token = payload.token;\n      state.isLoggedIn = true;\n    },\n    [logIn.fulfilled](state, { payload }) {\n      state.user = payload.user;\n      state.token = payload.token;\n      state.isLoggedIn = true;\n    },\n    [logOut.fulfilled](state, _) {\n      state.user = { name: '', email: '' };\n      state.token = '';\n      state.isLoggedIn = false;\n    },\n    [fetchCurrentUser.pending](state) {\n      state.isFetchCurrentUser = true;\n    },\n    [fetchCurrentUser.fulfilled](state, { payload }) {\n      state.user = payload;\n      state.isLoggedIn = true;\n    },\n    [fetchCurrentUser.rejected](state) {\n      state.isFetchCurrentUser = false;\n    },\n    [loginSuccess](state, { payload }) {\n      state.user = payload.user;\n      state.token = payload.token;\n      state.isLoggedIn = true;\n    },\n    [loginError](state, { payload }) {\n      state.error = payload.message;\n    },\n    [registerSuccess](state, { payload }) {\n      state.user = payload.user;\n      state.token = payload.token;\n      state.isLoggedIn = true;\n    },\n    [registerError](state, { payload }) {\n      state.error = payload.message;\n    },\n  },\n});\n\nexport default authSlice.reducer;\n","import { combineReducers } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { contactList, contactFilter } from './contacts/reducers';\nimport authSlice from './auth/auth-slice';\n\nimport logger from 'redux-logger';\n\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\nimport storage from 'redux-persist/lib/storage';\n\nconst persistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'], //  в localStorage,\n};\n\nconst contactReducer = combineReducers({\n  contactList,\n  contactFilter,\n});\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(persistConfig, authSlice),\n    contacts: contactReducer,\n  },\n\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }).concat(logger),\n});\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n//импорт компонента Provider\nimport { Provider } from 'react-redux';\n//импорт глобального состояния\nimport { store, persistor } from './redux/store';\n//импорт компонента PersistGate\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate persistor={persistor} loading={null}>\n        <Router>\n          <App />\n        </Router>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","export const getIsLoggedIn = state => state.auth.isLoggedIn;\n\nexport const getUserName = state => state.auth.user.name;\n\nexport const getIsFetchCurrentUser = state => state.auth.isFetchCurrentUser;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const loginRequest = createAction('auth/loginRequest');\nexport const loginSuccess = createAction('auth/loginSuccess');\nexport const loginError = createAction('auth/loginError');\n\nexport const registerRequest = createAction('auth/registerRequest');\nexport const registerSuccess = createAction('auth/registerSuccess');\nexport const registerError = createAction('auth/registerError');\n","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport {\n  loginRequest,\n  loginSuccess,\n  loginError,\n  registerRequest,\n  registerSuccess,\n  registerError,\n} from './auth-actions';\nimport { toast } from 'react-toastify';\n\nexport const BASE_URL = 'https://connections-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\n// export const register = createAsyncThunk(\n//   'auth/register',\n//   async (credentials, { rejectWithValue }) => {\n//     try {\n//       const { data } = await axios.post(\n//         `${BASE_URL}/users/signup`,\n//         credentials,\n//       );\n//       token.set(data.token);\n//       return data;\n//     } catch (error) {\n//       rejectWithValue(error);\n//     }\n//   },\n// );\n\nexport const register = userData => dispatch => {\n  dispatch(registerRequest());\n  axios\n    .post(`${BASE_URL}/users/signup`, userData)\n    .then(response => {\n      token.set(response.data.token);\n      dispatch(registerSuccess(response.data));\n    })\n    .catch(error => {\n      dispatch(registerError(error.message));\n      toast.info(error.message);\n    });\n};\n\n// export const logIn = createAsyncThunk(\n//   'auth/login',\n//   async (credentials, { rejectWithValue }) => {\n//     try {\n//       const { data } = await axios.post(`${BASE_URL}/users/login`, credentials);\n//       token.set(data.token);\n//       return data;\n//     } catch (error) {\n//       rejectWithValue(error);\n//     }\n//   },\n// );\n\nexport const logIn = userData => dispatch => {\n  dispatch(loginRequest());\n  axios\n    .post(`${BASE_URL}/users/login`, userData)\n    .then(response => {\n      token.set(response.data.token);\n      dispatch(loginSuccess(response.data));\n    })\n    .catch(error => {\n      dispatch(loginError(error.message));\n      toast.info(error.message);\n    });\n};\n\nexport const logOut = createAsyncThunk(\n  'auth/logout',\n  async (_, { rejectWithValue }) => {\n    try {\n      await axios.post(`${BASE_URL}/users/logout`);\n      token.unset();\n    } catch (error) {\n      rejectWithValue(error);\n    }\n  },\n);\n\nexport const fetchCurrentUser = createAsyncThunk(\n  'auth/refresh',\n  async (_, thunkAPI) => {\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n\n    if (persistedToken === '') {\n      console.log('No token');\n      return thunkAPI.rejectWithValue();\n    }\n    token.set(persistedToken);\n    try {\n      const { data } = await axios.get('/users/current');\n      return data;\n    } catch (error) {\n      thunkAPI.rejectWithValue(error);\n    }\n  },\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navLink\":\"AuthNav_navLink__2cXU3\",\"activeNavLink\":\"AuthNav_activeNavLink__1e8CC\",\"nav__container\":\"AuthNav_nav__container__1WqRx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navLink\":\"Navigation_navLink__1lTx2\",\"activeNavLink\":\"Navigation_activeNavLink__Lpu4R\"};","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nexport const addContact = createAsyncThunk(\n  'contacts/addContacts',\n  async (contact, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post(`/contacts`, contact);\n      return data;\n    } catch (error) {\n      rejectWithValue(error.message);\n    }\n  },\n);\n\nexport const fetchContacts = createAsyncThunk(\n  'contacts/fetchContacts',\n  async (_, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.get(`/contacts`);\n      return data;\n    } catch (error) {\n      rejectWithValue(error.message);\n    }\n  },\n);\n\n// export const removeContact = createAsyncThunk(\n//   'contacts/removeContact',\n//   async (contactId, { rejectWithValue }) => {\n//     console.log(contactId);\n//     try {\n//       const {\n//         data: { id },\n//       } = await axios.delete(`/contacts/${contactId}`);\n//       return contactId;\n//     } catch (error) {\n//       rejectWithValue(error.message);\n//     }\n//   },\n// );\n\nexport const removeContact = createAsyncThunk(\n  'contacts/removeContact',\n  async (contactId, { rejectWithValue }) => {\n    try {\n      const response = await axios.delete(`/contacts/${contactId}`);\n      if (response.status === 200) {\n        return contactId;\n      } else {\n        throw new Error({ message: 'error' });\n      }\n    } catch (error) {\n      rejectWithValue(error.message);\n    }\n  },\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user__container\":\"UserMenu_user__container__KxyPb\",\"logout__btn\":\"UserMenu_logout__btn__1eMOt\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const filterContacts = createAction('contact/filter');\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header__style\":\"AppBar_header__style__YaSGX\"};"],"sourceRoot":""}